---------------------------
 NEW LOCAL DEV ENVIRONMENT
---------------------------
	Assumptions:
		1) <newsite> is the name of the repo
		2) You're using Git Bash and PHPStorm
		3) /c/sites/www/ (C:\sites\www\) is a directory
		4) You already have a copy of the database

	Create new directory / pull repo [LOCAL]
	-----------------------------------------
		cd /c/sites/www/
		git clone <link>
		(should create <newsite> dir, which is the root dir)

	Create VM [LOCAL]
	------------------
		copy Vagrantfile into root dir, change vb.name to 'NewSite'
		copy bootstrap.sh into root dir, change all instances of 'newsite'
			vim bootstrap.sh
			:%s/newsite/<newsite>/g (find / replace 'newsite' with <newsite>)
		vagrant up (make sure it's using port 2222)
		vagrant status (make sure it's running properly)
		vagrant ssh

	Create User & Create / Import Database [VAGRANT]
	-------------------------------------------------
		mysql -u root (no password)
		// create database <newsite>; (shouldn't be needed)
		use <newsite>;
		grant all on <newsite>.* to root@localhost;
		quit; (mysql)
		mysql -u root <newsite> < <import file>.sql (via vagrant ssh)

	New PHPStorm Project [PHPSTORM]
	--------------------------------
		Create new project from existing files
		Choose: Source files are in a local directory, no web server is yet configured
		Navigate to /www/<newsite>, click 'Project Root'

	Add PHPStorm Deployment [PHPSTORM]
	-----------------------------------
		Navigate to Tools > Deployment > Configuration
		Add deployment name & SFTP
		Set connection settings
			SFTP host: 		wwww.<newsite>.dev
			Port: 			22
			Root Path: 		/
			User:			vagrant
			Pass: 			vagrant
			Web server: 	http://<SFTP host>
		Set mappings
			Local path: 	C:\sites\www\<newsite>
			Deploy path: 	/var/www/html
			Web path: 		/

	Update Hosts File [NOTEPAD as administrator]
	----------------------------
		192.168.33.10 newsite.dev www.newsite.dev

	Update Vagrant w/ Local Files [PHPSTORM]
	-----------------------------------------
		Right click on project folder (<newsite>) and click 'Upload To'

	Install Magerun [VAGRANT]
	--------------------------
		// https://github.com/netz98/n98-magerun/wiki/Commands
		wget http://files.magerun.net/n98-magerun-latest.phar -O n98-magerun.phar
		sudo chmod +x ./n98-magerun.phar
		sudo cp ./n98-magerun.phar /usr/local/bin/

	Install Magerun Add-Ons [VAGRANT]
	----------------------------------
		// http://magerun.net/magerun-addons-by-peter-jaap-blaakmeer/
		sudo mkdir -p ~/.n98-magerun/modules/
		cd ~/.n98-magerun/modules/
		sudo git clone https://github.com/peterjaap/magerun-addons.git

	Create local.xml [VAGRANT]
	---------------------------
		From Site Root:
		n98-magerun.phar local-config:generate
			Host: 		localhost
			User: 		root
			Pass: 		(blank)
			Database: 	<newsite>
			Session: 	db
			Admin: 		admin

	Change Base URLs [VAGRANT]
	---------------------------
		From Site Root:
		n98-magerun.phar sys:store:config:base-url:set
			Scope: 		0 (Main shop)
			Base URL: 	www.<newsite>.dev
			Unsecure: 	[ENTER]
			Secure: 	* Make sure secure url is http, not https
			Defaults are ok for everything else

	Add Database to PHPStorm [PHPSTORM]
	------------------------------------
		Click 'Database' tab on top right
		Add new MySQL data source
			General Tab:
				User:  		root
				Password: 	(blank)
				URL: 		jdbc:mysql://localhost:3306/<newsite>
							(Make sure the dropdown is set to 'URL only')
			SSH / SSL Tab:
				Use SSH tunnel: 	(checked)
				Host: 				127.0.0.1
				Port: 				2222
				User: 				vagrant
				Password: 			vagrant

		* NOTE: To test the connection to the db, vagrant up
				Testing the SSH connection, vagrant ssh

-------------------
 NEW CODE ANALYSIS
-------------------
	Assumptions:
		1) <siteanalysis> is the name of the analysis
		2) You're using Git Bash and PHPStorm
		3) /c/sites/www/ (C:\sites\www\) is a directory

	Create new directory [LOCAL]
	-----------------------------
		cd /c/sites/www/
		mkdir <siteanalysis>

	Create VM [LOCAL]
	------------------
		copy Vagrantfile into root dir, change vb.name to 'Site Analysis'
		copy /c/sites/Analyze/bootstrap.sh into root dir, 
		 change all instances of 'siteanalysis'
			vim bootstrap.sh
			:%s/siteanalysis/<siteanalysis>/g 
		vagrant up (make sure it's using port 2222)
		vagrant status (make sure it's running properly)
		vagrant ssh

	Update Vagrant w/ Local Files [LOCAL + VAGRANT]
	------------------------------------------------
		copy tar.gz into /c/www/sites/Vagrant/siteanalysis
		vagrant ssh (within siteanalysis dir)
		mv /vagrant_data/<siteanalysis>.tar.gz .
		tar zxvf <siteanalysis>.tar.gz

	Import Database
	----------------
		mysql -u root -p <siteanalysis> < <importfile>.sql

	Create local.xml [VAGRANT]
	---------------------------
		From Site Root:
		magerun local-config:generate
			Host: 		localhost
			User: 		root
			Pass: 		(blank)
			Database: 	<siteanalysis>
			Session: 	db
			Admin: 		admin

	Change Base URLs [VAGRANT] (Requires Add-Ons)
	---------------------------
		From Site Root:
		magerun sys:store:config:base-url:set
			Scope: 		0 (Main shop)
			Base URL: 	www.<siteanalysis>.dev
			Unsecure: 	[ENTER]
			Secure: 	* Make sure secure url is http, not https
			Defaults are ok for everything else

	Check Theme for Duplicates [VAGRANT]
	-------------------------------------
		magerun dev:theme:duplicates {packagename}

	Diff Core [LOCAL]
	------------------
		diff -wqr magento/app/code/core/ magento-clean/app/code/core/

	Check for Local Overrides [VAGRANT]
	------------------------------------
		if [ -d app/code/local/Mage ]; then echo 'Mage Directory in Local Codepool'; fi
		if [ -d app/code/local/Enterprise ]; then echo 'Enterprise Directory in Local Codepool'; fi
		if [ -d app/code/community/Mage ]; then echo 'Mage Directory in Community Codepool'; fi
		if [ -d app/code/community/Enterprise ]; then echo 'Enterprise Directory in Community Codepool'; fi

	Check for Rewrite Conflicts [VAGRANT]
	--------------------------------------
		magerun dev:module:rewrite:conflicts

	Check Code Quality [VAGRANT]
	-----------------------------
		phpcs -pn --report-width=120 --report=summary  --standard=Ecg/ app/code/local/

	Module Count [VAGRANT]
	-----------------------
		magerun dev:module:list --codepool=local --status=active
		magerun dev:module:list --codepool=community --status=active

---------------------------------
 GIT: ADD DEPLOYMENT TO NEW SITE
---------------------------------
	


---------------------
 GIT: CREATE NEW TAG
---------------------

	Merge new code into production branch
	--------------------------------------
		git tag -a v1.0.1 -m "Message describing reason for new version/tag"
		git push origin v1.0.1
		Create release on github off of tag
		On prod server
			<switch to website owner/user>
			git fetch --all
			git checkout -b v1.0.1 v1.0.1

--------------------------------
NEW DATABASE IN ZEROLAG CONTROL
--------------------------------
	Click into environment
	Click 'Add Account' in top right
	Change dropdown to 'this is a linked database account'
	Fill out form
	Save

---------------------------------------
GIT: REMOVE LARGE FILE SO YOU CAN PUSH
---------------------------------------
	git filter-branch --index-filter 'git rm -r --cached --ignore-unmatch <file/dir>' HEAD

